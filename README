Prometheus
==========

Simple package manager for POSIX systems.

Requirements
------------

- C99 compiler
- C POSIX library
- libcurl

Installaton
-----------

	$ make
	# make install

Usage
-----

	prometheus -i [-p prefix] package ...
	prometheus -u [-p prefix] [-r] package ...
	prometheus -l [-p prefix]
	prometheus -a

Repositories
------------

The repository tree must have a set of directories, each named after the
package it represents: each of these directories must contain the following
mandatory files:

- build
- outs

Each package directory may also contain the following optional files:

- depends
- sources

The program chroots in a temporary directory before building a package: it is
initialized with a /src directory, a /bin directory and a /prometheus.log file.

All packages whose name starts with "nochroot-" are considered nochroot
packages: before building these packages, the PREFIX environment variable will
be set to the temporary directory, and the program will not chroot to it. Since
these are potentially unsafe, the user is prompted before installing them.

- build

This file is an executable which is copied to the /src directory of the
temporary directory and called from it.

Its job is to build the package and install it to the root of the temporary
directory.

- outs

Each line of the outs file must be the absolute path of each file to be
installed to the system.

Empty lines and lines starting with # are ignored.

When uninstalling, all listed files are removed from the system. A package is
considered installed when all listed files exist.

The recommended way to generate it is to install the package manually and use
find to generate outs:

	$ find $builddir -type f \
	                 -exec echo {} \; | sed "s|^$builddir||" > outs

- depends

Each line of the depends file must be of the following format:

	PACKAGE [runtime]

Empty lines and lines starting with # are ignored.

A valid PACKAGE is the name of a package in the repository.

Each PACKAGE listed here is built prior to the package being built, is
installed to the root of the temporary directory and is ignored when installing
the package.

Additionally, when "runtime" is present after PACKAGE, PACKAGE gets also
installed to the system.

- sources

Each line of the sources file must be of the following format:

	SHA256 URL [RELPATH]

Empty lines and lines starting with # are ignored.

A valid URL is the relative path to a file in the package directory, a
HTTP/HTTPS address or a FTP address.

If URL is a local file, it must not be a directory.

Each source must have a corresponding SHA256 hash.

An optional RELPATH field may be provided: it is the path, relative to /src,
where the fetched source file is moved to after being retrieved and verified.
